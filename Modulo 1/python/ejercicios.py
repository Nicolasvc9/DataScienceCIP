# -*- coding: utf-8 -*-
"""Ejercicios.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17MHhCrT_5rcjrWf7h2Dj3ImK1g0PuJbt
"""

#Ejercicio en clase
def clasificar_persona(nombre, edad):

  primera_letra = nombre[0].upper()
  vocales = 'AEIOU'

  if edad < 18 and primera_letra in vocales:
    return 1
  elif edad >= 18 and primera_letra not in vocales:
    return 2
  else:
    return 3

nombre = input("Ingrese el nombre de la persona: ")
edad = int(input("Ingrese la edad de la persona: "))

grupo = clasificar_persona(nombre, edad)

print(f"Pertenece al grupo {grupo}")

#Ejercicio 2
def clasificar_persona(pais, nombre):

  longitud = len(nombre)

  if longitud < 5 and pais in 'colombia':
    return 'A'

  elif longitud >= 5 and pais in 'mexico':
    return 'B'

  else:
    return 'Otros'

pais = input("Ingrese el pais: ")
nombre = input("Ingrese su nombre: ")

grupo = clasificar_persona(pais, nombre)

print(f"Pertenece al grupo {grupo}")

#Ejercicio 3

puntuacion = float(input("Ingrese una puntuacion"))

if puntuacion == 1.0 and puntuacion < 1.5:
  print(f"Tu nivel es bajo y tu bono es de {puntuacion*3000000}")
elif puntuacion >= 1.5 and puntuacion < 2.0:
  print(f"Tu nivel es medio y tu bono es de {puntuacion*3000000}")
elif puntuacion >= 2.0 and puntuacion < 2.5:
  print(f"Tu nivel es alto y tu bono es de {puntuacion*3000000}")
elif puntuacion >= 2.5:
  print(f"Tu nivel es excelente y tu bono es de {puntuacion*3000000}")
else:
  print(f"Ingrese un valor")

#Ejercicio 4

def agregar_producto(inventario):
  nombre = input("Ingrese el nombre del producto: ")
  cantidad = int(input("Ingrese la cantidad: "))
  precio = float(input("Ingrese el precio: "))
  inventario[nombre] = [cantidad, precio]
  print("Producto agregado exitosamente.")

def eliminar_producto(inventario):
  nombre = input("Ingrese el nombre del producto a eliminar: ")
  if nombre in inventario:
    del inventario[nombre]
    print("Producto eliminado exitosamente.")
  else:
    print("Producto no encontrado.")

def actualizar_producto(inventario):
  nombre = input("Ingrese el nombre del producto a actualizar: ")
  if nombre in inventario:
    nueva_cantidad = int(input("Ingrese la nueva cantidad: "))
    nuevo_precio = float(input("Ingrese el nuevo precio: "))
    inventario[nombre] = [nueva_cantidad, nuevo_precio]
    print("Producto actualizado exitosamente.")
  else:
    print("Producto no encontrado.")

def mostrar_productos_agotados(inventario):
  print("Productos por agotarse:")
  for producto, datos in inventario.items():
    if datos[0] < 5:
      print(f"{producto}: Cantidad {datos[0]}, Precio ${datos[1]}")

def menu():
  inventario = {}
  while True:
    print("\nMenú SIGEP:")
    print("1. Agregar producto")
    print("2. Eliminar producto")
    print("3. Actualizar producto")
    print("4. Mostrar productos por agotarse")
    print("5. Salir")
    opcion = int(input("Ingrese una opción: "))

    if opcion == 1:
      agregar_producto(inventario)
    elif opcion == 2:
      eliminar_producto(inventario)
    elif opcion == 3:
      actualizar_producto(inventario)
    elif opcion == 4:
      mostrar_productos_agotados(inventario)
    elif opcion == 5:
      break
    else:
      print("Opción inválida.")

if __name__ == "__main__":
  menu()

#Clase 3

import numpy as np

array_basico = np.array([1, 2, 3, 4, 5])
array_basico

array_basico[0]

array_basico[0]=10
array_basico

array_basico*2

print(array_basico.min())
print(array_basico.max())
print(array_basico.sum())

array_basico[2:]

array_basico[:2]

array_basico[:]=99
array_basico

matriz = np.array([[3,2],[1,2],[5,6]])
matriz

array_multidimensional = np.array([[1,2,3,4], [6,7,8,9]])
array_multidimensional

array_bidimensional = np.array([[1,2,3,4],[5,6,7,8], [4,5,6,7]])
array_bidimensional

array_bidimensional[:, 0]

array_bidimensional[:2,1:]

array_bidimensional.max(axis=0)

#ejercicios con pandas

import pandas as pd

football_dicc = {
    "player": ["lionel messi", "cristiano ronaldo"],
    "year": [2016, 2016],
    "goals": [37, 25],
}

data = pd.DataFrame(football_dicc)
print(data)

from google.colab import drive

drive.mount('/content/drive')

import numpy as np
import pandas as pd

import plotly.express as px

path_file = "/content/drive/MyDrive/dataset_prueba.csv"
df = pd.read_csv(path_file, sep=",",header=0)
print(df.columns)

df.columns = ['Tempera', 'Humidity', 'PM2.5', 'PM10', 'NO2', 'SO2', 'CO',
       'Proximity_to_Industrial_Areas', 'Population_Density', 'Air Quality']

df.info()

#cuenta la cantidad de datos totales que existe
df['Tempera'].count()

#cuenta los datos repetidos
df['Tempera'].value_counts()

#cuata los datos unicos de la columna
df['Tempera'].unique()